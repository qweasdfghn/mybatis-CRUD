package com.greedy.section01.javaconfig;

import org.apache.ibatis.datasource.pooled.PooledDataSource;
import org.apache.ibatis.datasource.pooled.PooledDataSourceFactory;
import org.apache.ibatis.mapping.Environment;
import org.apache.ibatis.session.Configuration;
import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;

import org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory;



public class Application01 {
	
	private final static String DRIVER = "oracle.jdbc.driver.OracleDriver";
	private final static String URL = "jbdc.oracle:thin:@localhost:1521:xe";
	private final static String USER = "C##EMPLOYEE";
	private final static String PASSWORD = "EMPLOYEE";

	public static void main(String[] args) {
		
		/* DB접속에 관한 환경설정
		 * --------------------
		 * jdbcTranscationFactory : 수동커밋
		 * ManagedTransactionFactory : 자동커밋
		 * -------------------------
		 * PolledDataSource : ConnectionPool 사용
		 * UnpooledDataSource : ConnectionPoll 미사용
		 * ------------------------
		 * */
		
		Environment environment = new Environment("dev",   //환경 정보이름
				new JdbcTransactionFactory(), // 트랜젝션 매니저 종류 결정(JDBC OR MANAGED)
				new PooledDataSource(DRIVER, URL,USER, PASSWORD)); // CONNECTIONPOLL 사용 유무 (POOLED OR UNER)
		
		/*생성한 환경 설정 정보를 가지고 마이바티스 설정 객체 생성*/
		Configuration configuration = new Configuration(environment);
		
		/*설정 객체에 매퍼 등록*/
		configuration.addMapper(Mapper.class);
		
		/*SqlSessionFactory : SqlSession 객체를 생성하기 위한 팩토리의 역할을 수행하는 인터페이스
		 * SqlSessionFactoryBuilder : SqlSessionFactory 인터페이스 타입의 하위 구현 객체를 생성하기 위한 빌드 역할 수행
		 * 
		 * builder() : 설정에 대한 정보를 담고 있는 Configuration 타입의 객체 혹은 외부 설정 파일과 연결된 스트림을 매개변수로 전달하면
		 * sqlSessionFactory 인터페이스 타입의 객체를 반환하는 메소드
		 * */
		
		SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(configuration);
		
		/*openSession : SqlSession 인터페이스 타입의 객체를 반환하는 메소드 boolean 타입을 인자로 전달
		 * false : Connection 인터페이스 타입 객체로 dml 수행 후 auto Commit에 대한 옵션을 false로 지정(권장)
		 * true : Connection 인터페이스 타입의 객체로 dml 수행 후 auto Commit에 대한 옵션을 true로 지정
		 * */
		
		SqlSession sqlSession = sqlSessionFactory.openSession(false);
		
		// getMapper() : configuration 에 등록된 매퍼를 동일 타입에 대한 반환하는 메소드
		Mapper mapper = sqlSession.getMapper(Mapper.class);
		
		// mapper 인터페이스에 작성된 메서드를 호출하여 쿼리 실행
		java.util.Date date = mapper.selectSysdate();
		
		System.out.println(date);
		
		//close : sqlSession 객체 반납
		sqlSession.close();
		
	}

}
